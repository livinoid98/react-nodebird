{"ast":null,"code":"import { all, call, put, fork, takeLatest, takeEvery, delay } from 'redux-saga/effects';\nimport { LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_IN_FAILURE, SIGN_UP_REQUEST, SIGN_UP_SUCCESS, SIGN_UP_FAILURE, LOG_OUT_SUCCESS, LOAD_USER_SUCCESS, LOAD_USER_FAILURE } from '../reducers/user';\nimport axios from 'axios';\n\nfunction loginAPI(loginData) {\n  // 서버에 요청을 보내는 부분\n  return axios.post('/login', loginData, {\n    withCredentials: true\n  });\n}\n\nfunction logOutAPI() {\n  return axios.post('/user/logout', {}, {\n    withCredentials: true\n  });\n}\n\nfunction signUpAPI(signUpData) {\n  return axios.post('http://localhost:3065/api/user/', signUpData);\n}\n\nfunction loadUserAPI() {\n  return axios.get('/user/', {\n    withCredentials: true\n  });\n}\n\nfunction* login(action) {\n  try {\n    const result = yield call(loginAPI, action.data);\n    yield put({\n      //put은 dispatch와 동일\n      type: LOG_IN_SUCCESS,\n      data: result.data\n    });\n  } catch (e) {\n    //loginAPI 실패\n    console.error(e);\n    yield put({\n      type: LOG_IN_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* logOut(action) {\n  try {\n    yield call(logOutAPI);\n    yield put({\n      //put은 dispatch와 동일\n      type: LOG_OUT_SUCCESS\n    });\n  } catch (e) {\n    //loginAPI 실패\n    console.error(e);\n    yield put({\n      type: LOG_OUT_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* signUp(action) {\n  try {\n    // yield call(signUpAPI);\n    yield call(signUpAPI, action.data);\n    yield put({\n      type: SIGN_UP_SUCCESS\n    });\n  } catch (e) {\n    console.error(e);\n    yield put({\n      type: SIGN_UP_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* loadUser() {\n  try {\n    const result = yield call(loadUserAPI);\n    yield put({\n      type: LOAD_USER_SUCCESS\n    });\n  } catch (e) {\n    console.error(e);\n    yield put({\n      type: LOAD_USER_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchLogin() {\n  yield takeLatest(LOG_IN_REQUEST, login);\n}\n\nfunction* watchLogOut() {\n  yield takeEvery(LOG_OUT_REQUEST, logOut);\n}\n\nfunction* watchSignUp() {\n  yield takeEvery(SIGN_UP_REQUEST, signUp);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchLogin), fork(watchLogOut), fork(watchLoadUser), fork(watchSignUp)]);\n}","map":{"version":3,"sources":["C:/Users/admin/Desktop/react-nodebird/ch1/front/sagas/user.js"],"names":["all","call","put","fork","takeLatest","takeEvery","delay","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","LOG_OUT_SUCCESS","LOAD_USER_SUCCESS","LOAD_USER_FAILURE","axios","loginAPI","loginData","post","withCredentials","logOutAPI","signUpAPI","signUpData","loadUserAPI","get","login","action","result","data","type","e","console","error","logOut","LOG_OUT_FAILURE","signUp","loadUser","watchLogin","watchLogOut","LOG_OUT_REQUEST","watchSignUp","userSaga","watchLoadUser"],"mappings":"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","sourcesContent":["import {all, call, put, fork, takeLatest, takeEvery, delay} from 'redux-saga/effects'\r\nimport {LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_IN_FAILURE, SIGN_UP_REQUEST, SIGN_UP_SUCCESS, SIGN_UP_FAILURE, LOG_OUT_SUCCESS, LOAD_USER_SUCCESS, LOAD_USER_FAILURE} from '../reducers/user'\r\nimport axios from 'axios'\r\n\r\nfunction loginAPI(loginData){\r\n    // 서버에 요청을 보내는 부분\r\n    return axios.post('/login', loginData, {\r\n        withCredentials: true,\r\n    });\r\n}\r\n\r\nfunction logOutAPI(){\r\n    return axios.post('/user/logout', {}, {\r\n        withCredentials: true,\r\n    });\r\n}\r\n\r\nfunction signUpAPI(signUpData){\r\n    return axios.post('http://localhost:3065/api/user/', signUpData);\r\n}\r\n\r\nfunction loadUserAPI(){\r\n    return axios.get('/user/', {\r\n        withCredentials: true,\r\n    });\r\n}\r\n\r\nfunction* login(action){\r\n    try{\r\n        const result = yield call(loginAPI, action.data);\r\n        yield put({ //put은 dispatch와 동일\r\n            type:LOG_IN_SUCCESS,\r\n            data:result.data,\r\n        });\r\n    }catch(e){ //loginAPI 실패\r\n        console.error(e);\r\n        yield put({\r\n            type:LOG_IN_FAILURE,\r\n            error: e,\r\n        });\r\n    }\r\n}\r\n\r\nfunction* logOut(action){\r\n    try{\r\n        yield call(logOutAPI);\r\n        yield put({ //put은 dispatch와 동일\r\n            type:LOG_OUT_SUCCESS,\r\n        });\r\n    }catch(e){ //loginAPI 실패\r\n        console.error(e);\r\n        yield put({\r\n            type:LOG_OUT_FAILURE,\r\n            error: e,\r\n        });\r\n    }\r\n}\r\n\r\nfunction* signUp(action){\r\n    try{\r\n        // yield call(signUpAPI);\r\n        yield call(signUpAPI, action.data);\r\n        yield put({\r\n            type : SIGN_UP_SUCCESS,\r\n        });\r\n    }catch(e){\r\n        console.error(e);\r\n        yield put({\r\n            type: SIGN_UP_FAILURE,\r\n            error: e,\r\n        });\r\n    }\r\n}\r\n\r\nfunction* loadUser(){\r\n    try{\r\n        const result = yield call(loadUserAPI);\r\n        yield put({\r\n            type:LOAD_USER_SUCCESS,\r\n        });\r\n    }catch(e){\r\n        console.error(e);\r\n        yield put({\r\n            type:LOAD_USER_FAILURE,\r\n            error:e,\r\n        });\r\n    }\r\n}\r\n\r\nfunction* watchLogin(){\r\n    yield takeLatest(LOG_IN_REQUEST, login);\r\n}\r\n\r\nfunction* watchLogOut(){\r\n    yield takeEvery(LOG_OUT_REQUEST, logOut);\r\n}\r\n\r\nfunction* watchSignUp(){\r\n    yield takeEvery(SIGN_UP_REQUEST, signUp);\r\n}\r\n\r\nexport default function* userSaga(){\r\n    yield all([\r\n        fork(watchLogin),\r\n        fork(watchLogOut),\r\n        fork(watchLoadUser),\r\n        fork(watchSignUp),\r\n    ]);\r\n}"]},"metadata":{},"sourceType":"module"}