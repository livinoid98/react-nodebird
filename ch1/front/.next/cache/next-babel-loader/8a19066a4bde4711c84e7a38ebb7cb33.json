{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nexport var initialState = {\n  isLoggedIn: false,\n  user: {}\n};\nvar LOG_IN = 'LOG_IN'; // action의 이름\n\nvar LOG_OUT = 'LOG_OUT';\nvar loginAction = {\n  type: LOG_IN,\n  data: {\n    nickname: 'livinoid'\n  }\n};\nvar logoutAction = {\n  type: LOG_OUT\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case LOG_IN:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          isLoggedIn: true,\n          user: action.data\n        });\n      }\n\n    case LOG_OUT:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          isLoggedIn: false,\n          user: null\n        });\n      }\n\n    default:\n      {\n        return _objectSpread({}, state);\n      }\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/admin/Desktop/react-nodebird/ch1/front/reducers/user.js"],"names":["initialState","isLoggedIn","user","LOG_IN","LOG_OUT","loginAction","type","data","nickname","logoutAction","reducer","state","action"],"mappings":";;;;;;AAAA,OAAO,IAAMA,YAAY,GAAG;AACxBC,EAAAA,UAAU,EAAG,KADW;AAExBC,EAAAA,IAAI,EAAG;AAFiB,CAArB;AAKP,IAAMC,MAAM,GAAG,QAAf,C,CAAyB;;AACzB,IAAMC,OAAO,GAAG,SAAhB;AAEA,IAAMC,WAAW,GAAG;AAChBC,EAAAA,IAAI,EAAGH,MADS;AAEhBI,EAAAA,IAAI,EAAG;AACHC,IAAAA,QAAQ,EAAG;AADR;AAFS,CAApB;AAMA,IAAMC,YAAY,GAAG;AACjBH,EAAAA,IAAI,EAAGF;AADU,CAArB;;AAIA,IAAMM,OAAO,GAAG,SAAVA,OAAU,GAAmC;AAAA,MAAlCC,KAAkC,uEAA1BX,YAA0B;AAAA,MAAXY,MAAW;;AAC/C,UAAQA,MAAM,CAACN,IAAf;AACI,SAAKH,MAAL;AAAc;AACV,+CACOQ,KADP;AAEIV,UAAAA,UAAU,EAAG,IAFjB;AAGIC,UAAAA,IAAI,EAAGU,MAAM,CAACL;AAHlB;AAKH;;AACD,SAAKH,OAAL;AAAe;AACX,+CACOO,KADP;AAEIV,UAAAA,UAAU,EAAG,KAFjB;AAGIC,UAAAA,IAAI,EAAG;AAHX;AAKH;;AACD;AAAQ;AACJ,iCACOS,KADP;AAGH;AAnBL;AAqBH,CAtBD;;AAwBA,eAAeD,OAAf","sourcesContent":["export const initialState = {\r\n    isLoggedIn : false,\r\n    user : {},\r\n};\r\n\r\nconst LOG_IN = 'LOG_IN'; // action의 이름\r\nconst LOG_OUT = 'LOG_OUT';\r\n\r\nconst loginAction = {\r\n    type : LOG_IN,\r\n    data : {\r\n        nickname : 'livinoid',\r\n    },\r\n};\r\nconst logoutAction = {\r\n    type : LOG_OUT,\r\n};\r\n\r\nconst reducer = (state = initialState , action) => {\r\n    switch (action.type){\r\n        case LOG_IN : {\r\n            return {\r\n                ...state,\r\n                isLoggedIn : true,\r\n                user : action.data,\r\n            }\r\n        }\r\n        case LOG_OUT : {\r\n            return {\r\n                ...state,\r\n                isLoggedIn : false,\r\n                user : null,\r\n            }\r\n        }\r\n        default:{\r\n            return{\r\n                ...state,\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}