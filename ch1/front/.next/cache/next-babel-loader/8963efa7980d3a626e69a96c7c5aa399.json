{"ast":null,"code":"import { all, call, put, fork, takeLatest, takeEvery } from 'redux-saga/effects';\nimport { LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_IN_FAILURE, SIGN_UP_REQUEST, SIGN_UP_SUCCESS, SIGN_UP_FAILURE } from '../reducers/user';\n\nfunction loginAPI() {// 서버에 요청을 보내는 부분\n}\n\nfunction signUpAPI() {}\n\nfunction* login() {\n  try {\n    yield call(loginAPI);\n    yield put({\n      //put은 dispatch와 동일\n      type: LOG_IN_SUCCESS\n    });\n  } catch (e) {\n    //loginAPI 실패\n    console.error(e);\n    yield put({\n      type: LOG_IN_FAILURE\n    });\n  }\n}\n\nfunction* signUp() {\n  try {\n    yield call(signUpAPI);\n    yield put({\n      type: SIGN_UP_SUCCESS\n    });\n  } catch (e) {\n    console.error(e);\n    yield put({\n      type: SIGN_UP_FAILURE\n    });\n  }\n}\n\nfunction* watchLogin() {\n  yield takeLatest(LOG_IN_REQUEST, login);\n}\n\nfunction* watchSignUp() {\n  yield takeEvery(SIGN_UP_REQUEST, signUp);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchLogin), fork(watchSignUp)]);\n}","map":{"version":3,"sources":["C:/Users/admin/Desktop/react-nodebird/ch1/front/sagas/user.js"],"names":["all","call","put","fork","takeLatest","takeEvery","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","loginAPI","signUpAPI","login","type","e","console","error","signUp","watchLogin","watchSignUp","userSaga"],"mappings":"AAAA,SAAQA,GAAR,EAAaC,IAAb,EAAmBC,GAAnB,EAAwBC,IAAxB,EAA8BC,UAA9B,EAA0CC,SAA1C,QAA0D,oBAA1D;AACA,SAAQC,cAAR,EAAwBC,cAAxB,EAAwCC,cAAxC,EAAwDC,eAAxD,EAAyEC,eAAzE,EAA0FC,eAA1F,QAAgH,kBAAhH;;AAEA,SAASC,QAAT,GAAmB,CACf;AACH;;AAED,SAASC,SAAT,GAAoB,CAEnB;;AAED,UAAUC,KAAV,GAAiB;AACb,MAAG;AACC,UAAMb,IAAI,CAACW,QAAD,CAAV;AACA,UAAMV,GAAG,CAAC;AAAE;AACRa,MAAAA,IAAI,EAACR;AADC,KAAD,CAAT;AAGH,GALD,CAKC,OAAMS,CAAN,EAAQ;AAAE;AACPC,IAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACA,UAAMd,GAAG,CAAC;AACNa,MAAAA,IAAI,EAACP;AADC,KAAD,CAAT;AAGH;AACJ;;AAED,UAAUW,MAAV,GAAkB;AACd,MAAG;AACC,UAAMlB,IAAI,CAACY,SAAD,CAAV;AACA,UAAMX,GAAG,CAAC;AACNa,MAAAA,IAAI,EAAGL;AADD,KAAD,CAAT;AAGH,GALD,CAKC,OAAMM,CAAN,EAAQ;AACLC,IAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACA,UAAMd,GAAG,CAAC;AACNa,MAAAA,IAAI,EAACJ;AADC,KAAD,CAAT;AAGH;AACJ;;AAED,UAAUS,UAAV,GAAsB;AAClB,QAAMhB,UAAU,CAACE,cAAD,EAAiBQ,KAAjB,CAAhB;AACH;;AAED,UAAUO,WAAV,GAAuB;AACnB,QAAMhB,SAAS,CAACI,eAAD,EAAkBU,MAAlB,CAAf;AACH;;AAED,eAAe,UAAUG,QAAV,GAAoB;AAC/B,QAAMtB,GAAG,CAAC,CACNG,IAAI,CAACiB,UAAD,CADE,EAENjB,IAAI,CAACkB,WAAD,CAFE,CAAD,CAAT;AAIH","sourcesContent":["import {all, call, put, fork, takeLatest, takeEvery} from 'redux-saga/effects'\r\nimport {LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_IN_FAILURE, SIGN_UP_REQUEST, SIGN_UP_SUCCESS, SIGN_UP_FAILURE} from '../reducers/user'\r\n\r\nfunction loginAPI(){\r\n    // 서버에 요청을 보내는 부분\r\n}\r\n\r\nfunction signUpAPI(){\r\n\r\n}\r\n\r\nfunction* login(){\r\n    try{\r\n        yield call(loginAPI);\r\n        yield put({ //put은 dispatch와 동일\r\n            type:LOG_IN_SUCCESS,\r\n        });\r\n    }catch(e){ //loginAPI 실패\r\n        console.error(e);\r\n        yield put({\r\n            type:LOG_IN_FAILURE,\r\n        });\r\n    }\r\n}\r\n\r\nfunction* signUp(){\r\n    try{\r\n        yield call(signUpAPI);\r\n        yield put({\r\n            type : SIGN_UP_SUCCESS,\r\n        });\r\n    }catch(e){\r\n        console.error(e);\r\n        yield put({\r\n            type:SIGN_UP_FAILURE,\r\n        });\r\n    }\r\n}\r\n\r\nfunction* watchLogin(){\r\n    yield takeLatest(LOG_IN_REQUEST, login);\r\n}\r\n\r\nfunction* watchSignUp(){\r\n    yield takeEvery(SIGN_UP_REQUEST, signUp);\r\n}\r\n\r\nexport default function* userSaga(){\r\n    yield all([\r\n        fork(watchLogin),\r\n        fork(watchSignUp),\r\n    ]);\r\n}"]},"metadata":{},"sourceType":"module"}