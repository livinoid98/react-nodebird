{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nconst dummyUser = {\n  nickname: '리빈노이드',\n  Post: [],\n  Followings: [],\n  Followers: [],\n  isLoggedIn: false\n};\nexport const initialState = {\n  isLoggedIn: false,\n  user: null\n};\nexport const LOG_IN = 'LOG_IN'; // action의 이름\n\nexport const LOG_OUT = 'LOG_OUT';\nexport const loginAction = {\n  type: LOG_IN,\n  data: {\n    nickname: 'livinoid'\n  }\n};\nexport const logoutAction = {\n  type: LOG_OUT\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case LOG_IN:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          isLoggedIn: true,\n          user: action.data\n        });\n      }\n\n    case LOG_OUT:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          isLoggedIn: false,\n          user: null\n        });\n      }\n\n    default:\n      {\n        return _objectSpread({}, state);\n      }\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/admin/Desktop/react-nodebird/ch1/front/reducers/user.js"],"names":["dummyUser","nickname","Post","Followings","Followers","isLoggedIn","initialState","user","LOG_IN","LOG_OUT","loginAction","type","data","logoutAction","reducer","state","action"],"mappings":";;;;;;AAAA,MAAMA,SAAS,GAAG;AACdC,EAAAA,QAAQ,EAAG,OADG;AAEdC,EAAAA,IAAI,EAAC,EAFS;AAGdC,EAAAA,UAAU,EAAC,EAHG;AAIdC,EAAAA,SAAS,EAAC,EAJI;AAKdC,EAAAA,UAAU,EAAC;AALG,CAAlB;AAQA,OAAO,MAAMC,YAAY,GAAG;AACxBD,EAAAA,UAAU,EAAG,KADW;AAExBE,EAAAA,IAAI,EAAG;AAFiB,CAArB;AAKP,OAAO,MAAMC,MAAM,GAAG,QAAf,C,CAAyB;;AAChC,OAAO,MAAMC,OAAO,GAAG,SAAhB;AAEP,OAAO,MAAMC,WAAW,GAAG;AACvBC,EAAAA,IAAI,EAAGH,MADgB;AAEvBI,EAAAA,IAAI,EAAG;AACHX,IAAAA,QAAQ,EAAG;AADR;AAFgB,CAApB;AAMP,OAAO,MAAMY,YAAY,GAAG;AACxBF,EAAAA,IAAI,EAAGF;AADiB,CAArB;;AAIP,MAAMK,OAAO,GAAG,CAACC,KAAK,GAAGT,YAAT,EAAwBU,MAAxB,KAAmC;AAC/C,UAAQA,MAAM,CAACL,IAAf;AACI,SAAKH,MAAL;AAAc;AACV,+CACOO,KADP;AAEIV,UAAAA,UAAU,EAAG,IAFjB;AAGIE,UAAAA,IAAI,EAAGS,MAAM,CAACJ;AAHlB;AAKH;;AACD,SAAKH,OAAL;AAAe;AACX,+CACOM,KADP;AAEIV,UAAAA,UAAU,EAAG,KAFjB;AAGIE,UAAAA,IAAI,EAAG;AAHX;AAKH;;AACD;AAAQ;AACJ,iCACOQ,KADP;AAGH;AAnBL;AAqBH,CAtBD;;AAwBA,eAAeD,OAAf","sourcesContent":["const dummyUser = {\r\n    nickname : '리빈노이드',\r\n    Post:[],\r\n    Followings:[],\r\n    Followers:[],\r\n    isLoggedIn:false,\r\n}\r\n\r\nexport const initialState = {\r\n    isLoggedIn : false,\r\n    user : null,\r\n};\r\n\r\nexport const LOG_IN = 'LOG_IN'; // action의 이름\r\nexport const LOG_OUT = 'LOG_OUT';\r\n\r\nexport const loginAction = {\r\n    type : LOG_IN,\r\n    data : {\r\n        nickname : 'livinoid',\r\n    },\r\n};\r\nexport const logoutAction = {\r\n    type : LOG_OUT,\r\n};\r\n\r\nconst reducer = (state = initialState , action) => {\r\n    switch (action.type){\r\n        case LOG_IN : {\r\n            return {\r\n                ...state,\r\n                isLoggedIn : true,\r\n                user : action.data,\r\n            }\r\n        }\r\n        case LOG_OUT : {\r\n            return {\r\n                ...state,\r\n                isLoggedIn : false,\r\n                user : null,\r\n            }\r\n        }\r\n        default:{\r\n            return{\r\n                ...state,\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}