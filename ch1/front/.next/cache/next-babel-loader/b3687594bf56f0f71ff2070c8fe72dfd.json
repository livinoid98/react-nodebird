{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nexport const initialState = {\n  mainPosts: []\n};\nexport const ADD_POST = 'ADD_POST';\nexport const ADD_DUMMY = 'ADD_DUMMY';\nexport const addPost = {\n  type: ADD_POST\n};\nexport const addDummy = {\n  type: ADD_DUMMY,\n  data: {\n    content: 'hello',\n    UserId: 1,\n    User: {\n      nickname: 'livinoid'\n    }\n  }\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_POST:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case ADD_DUMMY:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          mainPosts: [action.data, ...state.mainPosts]\n        });\n      }\n\n    default:\n      {\n        return _objectSpread({}, state);\n      }\n  }\n};\n\nsetState(prevState => {\n  return {\n    field: _objectSpread({}, prevState.field)\n  };\n});\nexport default reducer;","map":{"version":3,"sources":["C:/Users/admin/Desktop/react-nodebird/ch1/front/reducers/post.js"],"names":["initialState","mainPosts","ADD_POST","ADD_DUMMY","addPost","type","addDummy","data","content","UserId","User","nickname","reducer","state","action","setState","prevState","field"],"mappings":";;;;;;AAAA,OAAO,MAAMA,YAAY,GAAG;AACxBC,EAAAA,SAAS,EAAG;AADY,CAArB;AAIP,OAAO,MAAMC,QAAQ,GAAG,UAAjB;AACP,OAAO,MAAMC,SAAS,GAAG,WAAlB;AAEP,OAAO,MAAMC,OAAO,GAAG;AACnBC,EAAAA,IAAI,EAAGH;AADY,CAAhB;AAGP,OAAO,MAAMI,QAAQ,GAAG;AACpBD,EAAAA,IAAI,EAAGF,SADa;AAEpBI,EAAAA,IAAI,EAAG;AACHC,IAAAA,OAAO,EAAG,OADP;AAEHC,IAAAA,MAAM,EAAG,CAFN;AAGHC,IAAAA,IAAI,EAAG;AACHC,MAAAA,QAAQ,EAAG;AADR;AAHJ;AAFa,CAAjB;;AAWP,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGb,YAAT,EAAuBc,MAAvB,KAAkC;AAC9C,UAAOA,MAAM,CAACT,IAAd;AACI,SAAKH,QAAL;AAAe;AACX,iCACOW,KADP;AAGH;;AACD,SAAKV,SAAL;AAAgB;AACZ,+CACOU,KADP;AAEIZ,UAAAA,SAAS,EAAE,CAACa,MAAM,CAACP,IAAR,EAAc,GAAGM,KAAK,CAACZ,SAAvB;AAFf;AAIH;;AACD;AAAS;AACL,iCACOY,KADP;AAGH;AAhBL;AAkBH,CAnBD;;AAqBAE,QAAQ,CAAEC,SAAD,IAAa;AAClB,SAAO;AACHC,IAAAA,KAAK,oBAAOD,SAAS,CAACC,KAAjB;AADF,GAAP;AAGH,CAJO,CAAR;AAMA,eAAeL,OAAf","sourcesContent":["export const initialState = {\r\n    mainPosts : [],\r\n};\r\n\r\nexport const ADD_POST = 'ADD_POST';\r\nexport const ADD_DUMMY = 'ADD_DUMMY';\r\n\r\nexport const addPost = {\r\n    type : ADD_POST,\r\n};\r\nexport const addDummy = {\r\n    type : ADD_DUMMY,\r\n    data : {\r\n        content : 'hello',\r\n        UserId : 1,\r\n        User : {\r\n            nickname : 'livinoid',\r\n        },\r\n    },\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case ADD_POST: {\r\n            return {\r\n                ...state,\r\n            };\r\n        }\r\n        case ADD_DUMMY: {\r\n            return {\r\n                ...state,\r\n                mainPosts: [action.data, ...state.mainPosts],\r\n            };\r\n        }\r\n        default: {\r\n            return {\r\n                ...state,\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nsetState((prevState)=>{\r\n    return {\r\n        field : {...prevState.field},\r\n    };\r\n});\r\n\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}