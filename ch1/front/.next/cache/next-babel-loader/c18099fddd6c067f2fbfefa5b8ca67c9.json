{"ast":null,"code":"import { all, fork, takeLatest, delay, put, call } from 'redux-saga/effects';\nimport { ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_FAILURE, LOAD_MAIN_POSTS_SUCCESS, LOAD_MAIN_POSTS_FAILURE, LOAD_MAIN_POSTS_REQUEST } from '../reducers/post';\n\nfunction addPostAPI(postData) {\n  return axios.post('/post', postData, {\n    withCredentials: true\n  });\n}\n\n;\n\nfunction loadMainPostsAPI() {\n  return axios.get('/posts', {\n    withCredentials: true\n  });\n}\n\n;\n\nfunction* addPost(action) {\n  try {\n    yield call(addPostAPI, action.data);\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: result.data\n    });\n  } catch (e) {\n    yield put({\n      type: ADD_POST_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* loadMainPosts(action) {\n  try {\n    const result = yield call(loadMainPostsAPI);\n    yield put({\n      type: LOAD_MAIN_POSTS_SUCCESS,\n      data: {\n        postId: action.data.postId\n      }\n    });\n  } catch (e) {\n    yield put({\n      type: LOAD_MAIN_POSTS_FAILURE,\n      error: e\n    });\n  }\n}\n\n;\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nfunction* watchLoadMainPosts() {\n  yield takeLatest(LOAD_MAIN_POSTS_REQUEST, loadMainPosts);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchLoadMainPosts), fork(watchAddPost)]);\n}","map":{"version":3,"sources":["C:/Users/admin/Desktop/react-nodebird/ch1/front/sagas/post.js"],"names":["all","fork","takeLatest","delay","put","call","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","LOAD_MAIN_POSTS_SUCCESS","LOAD_MAIN_POSTS_FAILURE","LOAD_MAIN_POSTS_REQUEST","addPostAPI","postData","axios","post","withCredentials","loadMainPostsAPI","get","addPost","action","data","type","result","e","error","loadMainPosts","postId","watchAddPost","watchLoadMainPosts","postSaga"],"mappings":"AAAA,SAAQA,GAAR,EAAaC,IAAb,EAAmBC,UAAnB,EAA+BC,KAA/B,EAAsCC,GAAtC,EAA2CC,IAA3C,QAAsD,oBAAtD;AACA,SAASC,gBAAT,EAA2BC,gBAA3B,EAA6CC,gBAA7C,EAA+DC,uBAA/D,EAAwFC,uBAAxF,EAAiHC,uBAAjH,QAAgJ,kBAAhJ;;AAEA,SAASC,UAAT,CAAoBC,QAApB,EAA6B;AACzB,SAAOC,KAAK,CAACC,IAAN,CAAW,OAAX,EAAoBF,QAApB,EAA8B;AACjCG,IAAAA,eAAe,EAAC;AADiB,GAA9B,CAAP;AAGH;;AAAA;;AAED,SAASC,gBAAT,GAA2B;AACvB,SAAOH,KAAK,CAACI,GAAN,CAAU,QAAV,EAAoB;AACvBF,IAAAA,eAAe,EAAE;AADM,GAApB,CAAP;AAGH;;AAAA;;AAED,UAAUG,OAAV,CAAkBC,MAAlB,EAAyB;AACrB,MAAG;AACC,UAAMf,IAAI,CAACO,UAAD,EAAaQ,MAAM,CAACC,IAApB,CAAV;AACA,UAAMjB,GAAG,CAAC;AACNkB,MAAAA,IAAI,EAAEf,gBADA;AAENc,MAAAA,IAAI,EAACE,MAAM,CAACF;AAFN,KAAD,CAAT;AAIH,GAND,CAMC,OAAMG,CAAN,EAAQ;AACL,UAAMpB,GAAG,CAAC;AACNkB,MAAAA,IAAI,EAACd,gBADC;AAENiB,MAAAA,KAAK,EAAED;AAFD,KAAD,CAAT;AAIH;AACJ;;AAED,UAAUE,aAAV,CAAwBN,MAAxB,EAA+B;AAC3B,MAAG;AACC,UAAMG,MAAM,GAAG,MAAMlB,IAAI,CAACY,gBAAD,CAAzB;AACA,UAAMb,GAAG,CAAC;AACNkB,MAAAA,IAAI,EAAEb,uBADA;AAENY,MAAAA,IAAI,EAAE;AACFM,QAAAA,MAAM,EAAEP,MAAM,CAACC,IAAP,CAAYM;AADlB;AAFA,KAAD,CAAT;AAMH,GARD,CAQC,OAAMH,CAAN,EAAQ;AACL,UAAMpB,GAAG,CAAC;AACNkB,MAAAA,IAAI,EAAEZ,uBADA;AAENe,MAAAA,KAAK,EAAED;AAFD,KAAD,CAAT;AAIH;AACJ;;AAAA;;AAED,UAAUI,YAAV,GAAwB;AACpB,QAAM1B,UAAU,CAACI,gBAAD,EAAmBa,OAAnB,CAAhB;AACH;;AAED,UAAUU,kBAAV,GAA8B;AAC1B,QAAM3B,UAAU,CAACS,uBAAD,EAA0Be,aAA1B,CAAhB;AACH;;AAED,eAAe,UAAUI,QAAV,GAAoB;AAC/B,QAAM9B,GAAG,CAAC,CACNC,IAAI,CAAC4B,kBAAD,CADE,EAEN5B,IAAI,CAAC2B,YAAD,CAFE,CAAD,CAAT;AAIH","sourcesContent":["import {all, fork, takeLatest, delay, put, call} from 'redux-saga/effects'\r\nimport { ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_FAILURE, LOAD_MAIN_POSTS_SUCCESS, LOAD_MAIN_POSTS_FAILURE, LOAD_MAIN_POSTS_REQUEST } from '../reducers/post'\r\n\r\nfunction addPostAPI(postData){\r\n    return axios.post('/post', postData, {\r\n        withCredentials:true,\r\n    });\r\n};\r\n\r\nfunction loadMainPostsAPI(){\r\n    return axios.get('/posts', {\r\n        withCredentials: true,\r\n    });\r\n};\r\n\r\nfunction* addPost(action){\r\n    try{\r\n        yield call(addPostAPI, action.data);\r\n        yield put({\r\n            type: ADD_POST_SUCCESS,\r\n            data:result.data,\r\n        });\r\n    }catch(e){\r\n        yield put({\r\n            type:ADD_POST_FAILURE,\r\n            error: e,\r\n        });\r\n    }\r\n}\r\n\r\nfunction* loadMainPosts(action){\r\n    try{\r\n        const result = yield call(loadMainPostsAPI);\r\n        yield put({\r\n            type: LOAD_MAIN_POSTS_SUCCESS,\r\n            data: {\r\n                postId: action.data.postId,\r\n            },\r\n        });\r\n    }catch(e){\r\n        yield put({\r\n            type: LOAD_MAIN_POSTS_FAILURE,\r\n            error: e,\r\n        });\r\n    }\r\n};\r\n\r\nfunction* watchAddPost(){\r\n    yield takeLatest(ADD_POST_REQUEST, addPost);\r\n}\r\n\r\nfunction* watchLoadMainPosts(){\r\n    yield takeLatest(LOAD_MAIN_POSTS_REQUEST, loadMainPosts);\r\n}\r\n\r\nexport default function* postSaga(){\r\n    yield all([\r\n        fork(watchLoadMainPosts),\r\n        fork(watchAddPost),\r\n    ]);\r\n}"]},"metadata":{},"sourceType":"module"}